/* we can import the url for the material.io icons by specifying the url here
@import url(link)*/
* {
  box-sizing: border-box;
}
.carousel-container {
  width: 1280px;
  min-height: 200px;
  /* background-color: #ccc; */
  margin: 50px auto;
  position: relative;
  /* display: flex; */
}

@media screen and (max-width: 768px) {
  .carousel-container {
    width: 80%;
  }
  /* can set the no of cards to be displayed by
  making changes to 
  .card-container {
   width: 304px not in px in %; 
  height: 250px; */
}

@media screen and (max-width: 1024px) {
  .carousel-container {
    width: 85%;
  }
}
.carousel-inner {
  overflow: hidden;
}
.track {
  display: inline-flex; /* if flex it only shows  first 4 elements inside track 
  ie its width value will bve that of parent containe. to include 
  all elements from the container give inline-flex so its width will be equal to width of all elements
  ie including overflown ones*/
  gap: 20px;

  transition: transform 0.5s;
}
.card-container {
  /* display: flex; */
  flex-shrink: 0; /* for the card to stay at same width when screen size changes*/
  width: 304px; /* calculate the width considering the no of cards to dispaly on screen and total width of container(1280px) ie (1280-60)/4; 60 is subtracted to consider the gap between the cards*/
  height: 250px;
  border-radius: 5px;
}
.card {
  display: flex;
  /* flex-direction: column; */
  width: 100%;
  height: 100%;
  border: 1px solid black;
}
.nav button {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 1px solid black;
  position: absolute; /*parent should be set to relative*/
  top: 50%; /* to center buttons vertically*/
  transform: translateY(-50%); /* to arrange it in middle of card vertically*/
  background-color: white;
  z-index: 1;
}
.prev {
  left: -25px; /* set to make the item arrange on the border.half of the button width is given as value. -ve value to move it backwards from current position */
  display: none;
}
.prev.show {
  display: block;
}
.next {
  right: -25px;
}

.next.hide {
  display: none;
}
/* everything on the first level inside the card, here img div
if multiple items in card give display flex and flex direction column. for this to work make sure 
card has dispaly flex
*/
/*shorthand for flex-grow, flex-shrink and flex-basis combined.The default 
          is  0 1 auto, but if you set it with a single number value, like flex: 5;,
         that changes the flex-basis to 0%, so it’s like setting flex-grow: 5; 
         flex-shrink: 1; flex-basis: 0%;
        flex-grow set to 1(If all items have flex-grow set to 1, 
        the remaining space in the container will be distributed equally to all children. If one of the children has a value of 2, that child would take up twice as much of the space either one of the others),
           flex-shrink (the ability for a flex item to shrink if necessary),
           flex-basis (defines the default size of an element before the 
           remaining space is distributed. If set to 0, the extra space around content isn’t factored in. If set to auto, the extra space is distributed based on its flex-grow value. ) all set to 1*/
.card > * {
  flex: 1;
}

/* if we need to make any of the element in the card smaller use
flex-basis: 40px and flex-grow to 0 so that it does not grow anymore. this makes sure it stays at 40px everytime.
 did this since we set .card with flex:1 which sets flex-grow and flex-shrink to 1 for that element. to make the content 
 dispalyed center add dispaly, align-items and justify-content eg */
/* .card .info {
  flex-basis: 40px;
  flex-grow: 0;
  background: #333;
  color: #fff;
  padding: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
} */

.card .img {
  display: flex;
  align-items: center;
  justify-content: center;
}
